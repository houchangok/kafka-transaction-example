/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package mykidong.domain.avro.events;  
@SuppressWarnings("all")
/** Event Log */
@org.apache.avro.specific.AvroGenerated
public class Events extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Events\",\"namespace\":\"mykidong.domain.avro.events\",\"doc\":\"Event Log\",\"fields\":[{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"int\"},{\"name\":\"issuedAt\",\"type\":\"long\"},{\"name\":\"messageContentType\",\"type\":[\"null\",\"string\"]},{\"name\":\"requestMessage\",\"type\":[\"null\",\"string\"]},{\"name\":\"dataContentType\",\"type\":[\"null\",\"string\"]},{\"name\":\"remoteAddress\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence version;
  @Deprecated public int type;
  @Deprecated public long issuedAt;
  @Deprecated public java.lang.CharSequence messageContentType;
  @Deprecated public java.lang.CharSequence requestMessage;
  @Deprecated public java.lang.CharSequence dataContentType;
  @Deprecated public java.lang.CharSequence remoteAddress;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Events() {}

  /**
   * All-args constructor.
   */
  public Events(java.lang.CharSequence version, java.lang.Integer type, java.lang.Long issuedAt, java.lang.CharSequence messageContentType, java.lang.CharSequence requestMessage, java.lang.CharSequence dataContentType, java.lang.CharSequence remoteAddress) {
    this.version = version;
    this.type = type;
    this.issuedAt = issuedAt;
    this.messageContentType = messageContentType;
    this.requestMessage = requestMessage;
    this.dataContentType = dataContentType;
    this.remoteAddress = remoteAddress;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return version;
    case 1: return type;
    case 2: return issuedAt;
    case 3: return messageContentType;
    case 4: return requestMessage;
    case 5: return dataContentType;
    case 6: return remoteAddress;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: version = (java.lang.CharSequence)value$; break;
    case 1: type = (java.lang.Integer)value$; break;
    case 2: issuedAt = (java.lang.Long)value$; break;
    case 3: messageContentType = (java.lang.CharSequence)value$; break;
    case 4: requestMessage = (java.lang.CharSequence)value$; break;
    case 5: dataContentType = (java.lang.CharSequence)value$; break;
    case 6: remoteAddress = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'version' field.
   */
  public java.lang.CharSequence getVersion() {
    return version;
  }

  /**
   * Sets the value of the 'version' field.
   * @param value the value to set.
   */
  public void setVersion(java.lang.CharSequence value) {
    this.version = value;
  }

  /**
   * Gets the value of the 'type' field.
   */
  public java.lang.Integer getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.Integer value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'issuedAt' field.
   */
  public java.lang.Long getIssuedAt() {
    return issuedAt;
  }

  /**
   * Sets the value of the 'issuedAt' field.
   * @param value the value to set.
   */
  public void setIssuedAt(java.lang.Long value) {
    this.issuedAt = value;
  }

  /**
   * Gets the value of the 'messageContentType' field.
   */
  public java.lang.CharSequence getMessageContentType() {
    return messageContentType;
  }

  /**
   * Sets the value of the 'messageContentType' field.
   * @param value the value to set.
   */
  public void setMessageContentType(java.lang.CharSequence value) {
    this.messageContentType = value;
  }

  /**
   * Gets the value of the 'requestMessage' field.
   */
  public java.lang.CharSequence getRequestMessage() {
    return requestMessage;
  }

  /**
   * Sets the value of the 'requestMessage' field.
   * @param value the value to set.
   */
  public void setRequestMessage(java.lang.CharSequence value) {
    this.requestMessage = value;
  }

  /**
   * Gets the value of the 'dataContentType' field.
   */
  public java.lang.CharSequence getDataContentType() {
    return dataContentType;
  }

  /**
   * Sets the value of the 'dataContentType' field.
   * @param value the value to set.
   */
  public void setDataContentType(java.lang.CharSequence value) {
    this.dataContentType = value;
  }

  /**
   * Gets the value of the 'remoteAddress' field.
   */
  public java.lang.CharSequence getRemoteAddress() {
    return remoteAddress;
  }

  /**
   * Sets the value of the 'remoteAddress' field.
   * @param value the value to set.
   */
  public void setRemoteAddress(java.lang.CharSequence value) {
    this.remoteAddress = value;
  }

  /** Creates a new Events RecordBuilder */
  public static mykidong.domain.avro.events.Events.Builder newBuilder() {
    return new mykidong.domain.avro.events.Events.Builder();
  }
  
  /** Creates a new Events RecordBuilder by copying an existing Builder */
  public static mykidong.domain.avro.events.Events.Builder newBuilder(mykidong.domain.avro.events.Events.Builder other) {
    return new mykidong.domain.avro.events.Events.Builder(other);
  }
  
  /** Creates a new Events RecordBuilder by copying an existing Events instance */
  public static mykidong.domain.avro.events.Events.Builder newBuilder(mykidong.domain.avro.events.Events other) {
    return new mykidong.domain.avro.events.Events.Builder(other);
  }
  
  /**
   * RecordBuilder for Events instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Events>
    implements org.apache.avro.data.RecordBuilder<Events> {

    private java.lang.CharSequence version;
    private int type;
    private long issuedAt;
    private java.lang.CharSequence messageContentType;
    private java.lang.CharSequence requestMessage;
    private java.lang.CharSequence dataContentType;
    private java.lang.CharSequence remoteAddress;

    /** Creates a new Builder */
    private Builder() {
      super(mykidong.domain.avro.events.Events.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(mykidong.domain.avro.events.Events.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.version)) {
        this.version = data().deepCopy(fields()[0].schema(), other.version);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.type)) {
        this.type = data().deepCopy(fields()[1].schema(), other.type);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.issuedAt)) {
        this.issuedAt = data().deepCopy(fields()[2].schema(), other.issuedAt);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.messageContentType)) {
        this.messageContentType = data().deepCopy(fields()[3].schema(), other.messageContentType);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.requestMessage)) {
        this.requestMessage = data().deepCopy(fields()[4].schema(), other.requestMessage);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.dataContentType)) {
        this.dataContentType = data().deepCopy(fields()[5].schema(), other.dataContentType);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.remoteAddress)) {
        this.remoteAddress = data().deepCopy(fields()[6].schema(), other.remoteAddress);
        fieldSetFlags()[6] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Events instance */
    private Builder(mykidong.domain.avro.events.Events other) {
            super(mykidong.domain.avro.events.Events.SCHEMA$);
      if (isValidValue(fields()[0], other.version)) {
        this.version = data().deepCopy(fields()[0].schema(), other.version);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.type)) {
        this.type = data().deepCopy(fields()[1].schema(), other.type);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.issuedAt)) {
        this.issuedAt = data().deepCopy(fields()[2].schema(), other.issuedAt);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.messageContentType)) {
        this.messageContentType = data().deepCopy(fields()[3].schema(), other.messageContentType);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.requestMessage)) {
        this.requestMessage = data().deepCopy(fields()[4].schema(), other.requestMessage);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.dataContentType)) {
        this.dataContentType = data().deepCopy(fields()[5].schema(), other.dataContentType);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.remoteAddress)) {
        this.remoteAddress = data().deepCopy(fields()[6].schema(), other.remoteAddress);
        fieldSetFlags()[6] = true;
      }
    }

    /** Gets the value of the 'version' field */
    public java.lang.CharSequence getVersion() {
      return version;
    }
    
    /** Sets the value of the 'version' field */
    public mykidong.domain.avro.events.Events.Builder setVersion(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.version = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'version' field has been set */
    public boolean hasVersion() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'version' field */
    public mykidong.domain.avro.events.Events.Builder clearVersion() {
      version = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'type' field */
    public java.lang.Integer getType() {
      return type;
    }
    
    /** Sets the value of the 'type' field */
    public mykidong.domain.avro.events.Events.Builder setType(int value) {
      validate(fields()[1], value);
      this.type = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'type' field */
    public mykidong.domain.avro.events.Events.Builder clearType() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'issuedAt' field */
    public java.lang.Long getIssuedAt() {
      return issuedAt;
    }
    
    /** Sets the value of the 'issuedAt' field */
    public mykidong.domain.avro.events.Events.Builder setIssuedAt(long value) {
      validate(fields()[2], value);
      this.issuedAt = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'issuedAt' field has been set */
    public boolean hasIssuedAt() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'issuedAt' field */
    public mykidong.domain.avro.events.Events.Builder clearIssuedAt() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'messageContentType' field */
    public java.lang.CharSequence getMessageContentType() {
      return messageContentType;
    }
    
    /** Sets the value of the 'messageContentType' field */
    public mykidong.domain.avro.events.Events.Builder setMessageContentType(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.messageContentType = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'messageContentType' field has been set */
    public boolean hasMessageContentType() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'messageContentType' field */
    public mykidong.domain.avro.events.Events.Builder clearMessageContentType() {
      messageContentType = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'requestMessage' field */
    public java.lang.CharSequence getRequestMessage() {
      return requestMessage;
    }
    
    /** Sets the value of the 'requestMessage' field */
    public mykidong.domain.avro.events.Events.Builder setRequestMessage(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.requestMessage = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'requestMessage' field has been set */
    public boolean hasRequestMessage() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'requestMessage' field */
    public mykidong.domain.avro.events.Events.Builder clearRequestMessage() {
      requestMessage = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'dataContentType' field */
    public java.lang.CharSequence getDataContentType() {
      return dataContentType;
    }
    
    /** Sets the value of the 'dataContentType' field */
    public mykidong.domain.avro.events.Events.Builder setDataContentType(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.dataContentType = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'dataContentType' field has been set */
    public boolean hasDataContentType() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'dataContentType' field */
    public mykidong.domain.avro.events.Events.Builder clearDataContentType() {
      dataContentType = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'remoteAddress' field */
    public java.lang.CharSequence getRemoteAddress() {
      return remoteAddress;
    }
    
    /** Sets the value of the 'remoteAddress' field */
    public mykidong.domain.avro.events.Events.Builder setRemoteAddress(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.remoteAddress = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'remoteAddress' field has been set */
    public boolean hasRemoteAddress() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'remoteAddress' field */
    public mykidong.domain.avro.events.Events.Builder clearRemoteAddress() {
      remoteAddress = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public Events build() {
      try {
        Events record = new Events();
        record.version = fieldSetFlags()[0] ? this.version : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.type = fieldSetFlags()[1] ? this.type : (java.lang.Integer) defaultValue(fields()[1]);
        record.issuedAt = fieldSetFlags()[2] ? this.issuedAt : (java.lang.Long) defaultValue(fields()[2]);
        record.messageContentType = fieldSetFlags()[3] ? this.messageContentType : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.requestMessage = fieldSetFlags()[4] ? this.requestMessage : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.dataContentType = fieldSetFlags()[5] ? this.dataContentType : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.remoteAddress = fieldSetFlags()[6] ? this.remoteAddress : (java.lang.CharSequence) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
